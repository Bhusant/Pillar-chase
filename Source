local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

Deb = game:GetService("Debris")
CD1 = false
local Window = Rayfield:CreateWindow({
   Name = "Pillar chase script",
   LoadingTitle = "THIS IS BETA",
   LoadingSubtitle = "made by exuctive_mem on discord",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("Main Stuff", 138569152331723) -- Title, Image

local Button = Tab:CreateButton({
   Name = "ESP Objectives / Highlight or Show objectives",
   Callback = function()
for _, part in pairs(Workspace.Map.ObjectiveInteract:GetChildren()) do
    if not part:FindFirstChildOfClass("Highlight") then
        local highlight = Instance.new("Highlight")
        highlight.Parent = part
    end
end
   end,
})

local Button = Tab:CreateButton({
   Name = "ESP Items",
   Callback = function()
for _, part in pairs(Workspace.Server.PickUps:GetChildren()) do
        local highlight = Instance.new("Highlight")
        highlight.Parent = part
end
   end,
})

local Button = Tab:CreateButton({
   Name = "50 coins every round",
   Callback = function()
while true do
wait(0.1)
for _, part in pairs(game.Players:GetChildren()) do
part.CoinsToGive.Value = 50
end
end
   end,
})

local Button = Tab:CreateButton({
   Name = "Fullbright",
   Callback = function()
game.Lighting.Atmosphere:Destroy()
while true do
wait(0.5)
game.Lighting.Ambient = Color3.new(1,1,1)
end
   end,
})
function player()
    for _, player in pairs(game.Players:GetChildren()) do
        if player.Character then
            local highlight = player.Character:FindFirstChild("Highlight")
            if CD1 and not highlight then
                highlight = Instance.new("Highlight")
                highlight.Parent = player.Character
                highlight.FillColor = Color3.new(1, 1, 1)
            elseif not CD1 and highlight then
                highlight:Destroy()
            end
        end
    end
end
local Toggle = Tab:CreateToggle({
   Name = "Player Esp",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
CD1 = Value  
player() 
   end,
})

local args = {
    [1] = 2
}
local Button = Tab:CreateButton({
   Name = "Do objective(only works on certain maps)",
 Callback = function()
game:GetService("Players").LocalPlayer.PlayerGui.GameGui.ClientObjScript.CoinOBJ:FireServer(unpack(args))
   end,
})

local Button = Tab:CreateButton({
   Name = "Collect candies (only works once per game)",
 Callback = function()
for i=1, 100 do
game:GetService("Players").LocalPlayer.PlayerGui.GameGui.HalloweenScript.RemoteEvent:FireServer()
end
   end,
})
